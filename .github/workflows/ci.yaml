name: CI

on:
  push:
    # Run on the main branch
    branches:
      - main
  # Also on PRs, just be careful not to publish anything
  pull_request:
  # Allow to be called from other workflows (like "release")
  workflow_call:
  # But don't trigger on tags, as they are covered by the "release.yaml" workflow
  # trigger nightly, to ensure it still works with newer data
  schedule:
    - cron: "45 2 * * *"

jobs:

  msrv:
    runs-on: ubuntu-latest
    outputs:
      rust-version: ${{ steps.get-version.outputs.rust-version }}
    steps:
      - uses: actions/checkout@v4
      - name: Extract version
        id: get-version
        run: |
          MSRV=$(cargo metadata --no-deps --format-version=1 | jq -r '.packages[0].rust_version')
          echo "rust-version=$MSRV" >> $GITHUB_OUTPUT

  preflight:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: webiny/action-conventional-commits@v1.3.0

      - uses: Swatinem/rust-cache@v2
      - uses: obi1kenobi/cargo-semver-checks-action@v2

      - name: Check formatting
        run: |
          cargo fmt --check

  check:
    needs:
      - msrv
      - preflight

    strategy:
      matrix:

        rust:
          - stable
          - ${{ needs.msrv.outputs.rust-version }}

        os:
          - ubuntu-22.04
          - windows-2022
          - macos-14

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2

      - name: Install Rust ${{ matrix.rust }}
        run: |
          rustup install ${{ matrix.rust }} --no-self-update --component clippy

      - name: Clippy
        run: cargo +${{ matrix.rust }} clippy --all-targets --tests --bins --all -- -D warnings

      - name: Test
        run: cargo +${{ matrix.rust }} test

      - name: Install binstall
        run: |
          curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash

      - name: Install cargo-all-features
        run: |
          cargo binstall -y cargo-all-features

      - name: Check (all features)
        run: |
          cargo check-all-features

  test:
    runs-on: ubuntu-22.04
    needs:
      - preflight

    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2

      - name: Clone test data
        uses: actions/checkout@v4
        with:
          repository: CVEProject/cvelistV5
          path: cvelistV5

      - name: Test against CVE database
        env:
          CVE_BASE_DIR: ${{github.workspace}}/cvelistV5
        run: cargo run --example walkall

  ci:
    runs-on: ubuntu-22.04
    needs:
      - test
      - check
    if: always()
    steps:
      - name: Success
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
      - name: Failure
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1
